//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!!!   DO NOT EDIT OR CHANGE THIS FILE. CHANGE THE ORIGINAL INSTEAD.      !!!
//!!!   THIS FILE HAS BEEN GENERATED BY CPP AND SED,                       !!!
//!!!   BECAUSE JAVA DOES NOT SUPPORT CONDITIONAL COMPILATION.             !!!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//# 1 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/front/../util/APDU_byte_array.java"
//# 1 "<built-in>"
//# 1 "<command-line>"
//# 1 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/front/../util/APDU_byte_array.java"
// 
// OV-chip 2.0 project
// 
// Digital Security (DS) group at Radboud Universiteit Nijmegen
// 
// Copyright (C) 2008, 2009
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License in file COPYING in this or one of the
// parent directories for more details.
// 
// Created 1.11.08 by Hendrik
// 
// APDU_Serializable interface for byte arrays
// 
// $Id: APDU_byte_array.java,v 1.9 2009-05-28 15:17:03 tews Exp $

//# 1 "./config" 1
// 
// OV-chip 2.0 project
// 
// Digital Security (DS) group at Radboud Universiteit Nijmegen
// 
// Copyright (C) 2008, 2009
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License in file COPYING in this or one of the
// parent directories for more details.
// 
// Created 5.11.08 by Hendrik
// 
// preprocessor config directives
// 
// $Id: config,v 1.16 2010-02-18 12:40:38 tews Exp $
//# 69 "./config"
  // XXX the applet id is also hardwired in Makefile!
//# 200 "./config"
/// Local Variables:
/// mode: c
/// End:
//# 26 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/front/../util/APDU_byte_array.java" 2


  package ds_ov2_srsa;






/** 
 * {@link APDU_Serializable} wrapper around a fixed size byte array. 
 *
 * @author Hendrik Tews
 * @version $Revision: 1.9 $
 * @commitdate $Date: 2009-05-28 15:17:03 $ by $Author: tews $
 * @environment host, card
 * @CPP This class uses the following cpp defines:
 *   <a href="../../../overview-summary.html#PACKAGE">PACKAGE</a>,
 *   <a href="../../../overview-summary.html#PUBLIC">PUBLIC</a>,
 *   <a href="../../../overview-summary.html#ASSERT">ASSERT</a>
 */
 class APDU_byte_array implements APDU_Serializable {

    /**
     * 
     * The byte array. The byte array can be freely changed, but this
     * reference itself must stay constant.
     */
    public final byte[] buf;


    /**
     * 
     * Create a new wrapped byte array of length {@code size}.
     * 
     * @param size length of the wrapped byte array
     */
    public APDU_byte_array(short size) {
        buf = new byte[size];
        return;
    }


    /**
     * 
     * Create a APDU_byte_array by wrapping an existing byte array.
     * 
     * @param buf the byte array to wrap
     */
    public APDU_byte_array(byte buf[]) {
        this.buf = buf;
    }


    //########################################################################
    // APDU_Serializable interface
    // 


    /**
     * Size in bytes necessary to send or receive this object 
     * via the OV-chip protocol layer, see 
     * {@link ds.ov2.util.APDU_Serializable#size APDU_Serializable.size()}.
     *
     * @return length of the {@link #buf} byte array
     */
    public short size() {
        return (short)buf.length;
    }


    /**
     * Compatibility check for the OV-chip protocol layer.
     * See <a href="APDU_Serializable.html#apdu_compatibility">
     * the compatibility check 
     * explanations</a> and also
     * {@link ds.ov2.util.APDU_Serializable#is_compatible_with 
     * APDU_Serializable.is_compatible_with}.
     * <P>
     *
     * Objects of this class are only compatible to objects of this
     * class of the same size.
     *
     * @param o actual argument or result
     * @return true if this {@code o} is an APDU_byte_array of the
     * same size
     */
    public boolean is_compatible_with(Object o) {
        if(o instanceof APDU_byte_array) {
            return this.size() == ((APDU_byte_array)o).size();
        }
        return false;
    }


    /**
     * Serialize the byte array. See {@link 
     * ds.ov2.util.APDU_Serializable#to_byte_array 
     * APDU_Serializable.to_byte_array}.
     *
     * @param len available space in {@code byte_array}
     * @param this_index number of bytes that
     * have already been written in preceeding calls
     * @param byte_array data array to serialize the state into
     * @param byte_index index in {@code byte_array} 
     * @return the number of bytes actually written, except for the case 
     *           where serialization finished by writing precisely 
     *           {@code len} bytes, in this case {@code len + 1} is 
     *           returned.
     */
    public short to_byte_array(short len, short this_index,
                               byte[] byte_array, short byte_index) {
        Misc.myassert(this_index < buf.length, (short)(0));
        short max =
            (short)(this_index + len) <= buf.length ?
                        len : (short)(buf.length - this_index);
        Misc.array_copy(buf, this_index, byte_array, byte_index, max);
        if((short)(this_index + len) == buf.length)
            return (short)(len + 1);
        else
            return max;
    }


    /**
     * Deserialization the byte array. See {@link 
     * ds.ov2.util.APDU_Serializable#from_byte_array 
     * APDU_Serializable.from_byte_array}.
     *
     * @param len available data in {@code byte_array}
     * @param this_index number of bytes that
     * have already been read in preceeding calls
     * @param byte_array data array to deserialize from
     * @param byte_index index in {@code byte_array} 
     * @return the number of bytes actually read, except for the case 
     *           where deserialization finished by reading precisely 
     *           {@code len} bytes, in this case {@code len + 1} is 
     *           returned.
     */
    public short from_byte_array(short len, short this_index,
                                 byte[] byte_array, short byte_index) {
        Misc.myassert(this_index < buf.length, (short)(0));
        short max =
            (short)(this_index + len) <= buf.length ?
                      len : (short)(buf.length - this_index);
        Misc.array_copy(byte_array, byte_index, buf, this_index, max);
        if((short)(this_index + len) == buf.length)
            return (short)(len + 1);
        else
            return max;
    }
}
