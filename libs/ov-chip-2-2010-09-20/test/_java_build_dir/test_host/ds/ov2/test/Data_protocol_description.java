//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!!!   DO NOT EDIT OR CHANGE THIS FILE. CHANGE THE ORIGINAL INSTEAD.      !!!
//!!!   THIS FILE HAS BEEN GENERATED BY CPP AND SED,                       !!!
//!!!   BECAUSE JAVA DOES NOT SUPPORT CONDITIONAL COMPILATION.             !!!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//# 1 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description.java"
//# 1 "<built-in>"
//# 1 "<command-line>"
//# 1 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description.java"
// DO NOT EDIT! DO NOT EDIT! DO NOT EDIT! DO NOT EDIT! DO NOT EDIT! 
//
// This file has been generated automatically from Data_protocol.id
// by some sort of idl compiler.

//# 1 "./config" 1
// 
// OV-chip 2.0 project
// 
// Digital Security (DS) group at Radboud Universiteit Nijmegen
// 
// Copyright (C) 2008, 2009
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License in file COPYING in this or one of the
// parent directories for more details.
// 
// Created 26.7.08 by Hendrik
// 
// preprocessor config directives
// 
// $Id: config,v 1.17 2010-02-16 10:26:10 tews Exp $
//# 91 "./config"
/// Local Variables:
/// mode: c
/// End:
//# 7 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description.java" 2




  package ds.ov2.test;







  import ds.ov2.util.APDU_Serializable;
  import ds.ov2.util.Protocol_step;
  import ds.ov2.util.Protocol;
  import ds.ov2.util.Resizable_buffer;
  import ds.ov2.util.APDU_boolean;
  import ds.ov2.util.APDU_short_array;







/**
 * Protocol description for Data_protocol. Defines suitable Protocol's and Protocol_steps for all protocols described in Data_protocol.id for use in the OV-chip protocol layer.
 * 
 * @author idl compiler
 * @version automatically generated from Data_protocol.id
 * @environment host, card
 * @CPP This class uses the following cpp defines:
 *   <a href="../../../overview-summary.html#PACKAGE">PACKAGE</a>,
 *   <a href="../../../overview-summary.html#JAVACARD_APPLET">JAVACARD_APPLET</a>,
 *   <a href="../../../overview-summary.html#APPLET_TESTFRAME">APPLET_TESTFRAME</a>,
 *   <a href="../../../overview-summary.html#PUBLIC">PUBLIC</a>,
 *   <a href="../../../overview-summary.html#ASSERT">ASSERT</a>
 */
public class Data_protocol_description {

    //#########################################################################
    // Variable declarations
    // 
//# 62 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description.java"
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Test_protocols test_protocols;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_0;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_1;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_2;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_3;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_4;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_5;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_6;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_7;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_8;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ Resizable_buffer buf_9;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ APDU_short_array buf_sizes;
    /**
     * Variable declaration from Data_protocol.id.
     */
    /* package local */ APDU_boolean performance_test;


//# 1 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description_include.java" 1
// 
// OV-chip 2.0 project
// 
// Digital Security (DS) group at Radboud Universiteit Nijmegen
// 
// Copyright (C) 2008, 2009
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License in file COPYING in this or one of the
// parent directories for more details.
// 
// Created 2.10.08 by Hendrik
// 
// to be included in Data_protocol_description
// 
// $Id: Data_protocol_description_include.java,v 1.5 2009-04-09 21:07:27 tews Exp $


/**
 * 
 * The maximal size of the ten {@link Resizable_buffer
 * Resizable_buffer's} used for the protocol data checks. Has value
 * {@value}. 
 */
public static final short check_data_max_size = 2100;


/**
 * 
 * Change the sizes of the {@link Resizable_buffer
 * Resizable_buffer's}. The sizes are taken from {@link #buf_sizes}.
 * The new actual sizes of the buffers are afterwards written back
 * into {@link #buf_sizes}. This method does also call {@link
 * Test_protocols#set_result_sizes} to update the result sizes of all
 * registered protocols.
 */
public void set_size() {
    buf_0.set_size(buf_sizes.get((short)0));
    buf_1.set_size(buf_sizes.get((short)1));
    buf_2.set_size(buf_sizes.get((short)2));
    buf_3.set_size(buf_sizes.get((short)3));
    buf_4.set_size(buf_sizes.get((short)4));
    buf_5.set_size(buf_sizes.get((short)5));
    buf_6.set_size(buf_sizes.get((short)6));
    buf_7.set_size(buf_sizes.get((short)7));
    buf_8.set_size(buf_sizes.get((short)8));
    buf_9.set_size(buf_sizes.get((short)9));

    // Reinitialize the result size cache.
    test_protocols.set_result_sizes();

    // set_size is ignored if the requested size is too big.
    // Report now the actual sizes.
    buf_sizes.set((short)0, buf_0.size());
    buf_sizes.set((short)1, buf_1.size());
    buf_sizes.set((short)2, buf_2.size());
    buf_sizes.set((short)3, buf_3.size());
    buf_sizes.set((short)4, buf_4.size());
    buf_sizes.set((short)5, buf_5.size());
    buf_sizes.set((short)6, buf_6.size());
    buf_sizes.set((short)7, buf_7.size());
    buf_sizes.set((short)8, buf_8.size());
    buf_sizes.set((short)9, buf_9.size());

    return;
}


/**
 * 
 * Return the {@link #buf_sizes} array.
 * 
 * @return the {@link #buf_sizes} array
 */
public APDU_short_array get_buf_sizes() {
    return buf_sizes;
}
//# 117 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description.java" 2


    //#########################################################################
    //#########################################################################
    // 
    // Protocol check_data
    // 
    //#########################################################################
    //#########################################################################

    //#########################################################################
    // Step methods
    // 
//# 156 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description.java"
    //#########################################################################
    // Steps
    // 

    /**
     * Step instance for step check_data in protocol check_data.
     */
    Protocol_step check_data_step;



    /**
     * Initialize {@link #check_data_step}.
     * Initialize the step instance for step check_data in protocol check_data.
     */
    private void init_check_data_step() {
        if(check_data_step != null)
            return;

        APDU_Serializable[] args = new APDU_Serializable[]{
            buf_0,
            buf_1,
            buf_2,
            buf_3,
            buf_4
        };

        APDU_Serializable[] res = new APDU_Serializable[]{
            buf_5,
            buf_6,
            buf_7,
            buf_8,
            buf_9
        };

        check_data_step =
            new Protocol_step(
                (byte)0, // P1
                args, // args



                res // results
            );
        return;
    }


    /**
     * Update step instance in {@link #check_data_step}.
     * Update argument and result references in the step check_data
     * of protocol check_data.
     */
    public void update_check_data_step() {
        assert(check_data_step != null);

        check_data_step.arguments[0] = buf_0;
        check_data_step.arguments[1] = buf_1;
        check_data_step.arguments[2] = buf_2;
        check_data_step.arguments[3] = buf_3;
        check_data_step.arguments[4] = buf_4;
        check_data_step.results[0] = buf_5;
        check_data_step.results[1] = buf_6;
        check_data_step.results[2] = buf_7;
        check_data_step.results[3] = buf_8;
        check_data_step.results[4] = buf_9;
        return;
    }



    //#########################################################################
    // check_data protocol definition
    // 

    /**
     * Protocol instance for protocol check_data.
     */
    public Protocol check_data_protocol;

    /**
     * Initialize {@link #check_data_protocol}.
     * Initialize the protocol instance for protocol check_data.
     */
    private void init_check_data_protocol() {
        if(check_data_protocol != null)
            return;

        init_check_data_step();

        Protocol_step[] steps = new Protocol_step[]{
            check_data_step
        };
        check_data_protocol = new Protocol(steps);
        return;
    }


    /**
     * Update {@link #check_data_protocol}.
     * Update argument and result references in all 
     * steps of protocol check_data.
     */
    public void update_check_data_protocol() {
        update_check_data_step();
        check_data_protocol.set_result_sizes();
    }


    //#########################################################################
    //#########################################################################
    // 
    // Protocol set_size
    // 
    //#########################################################################
    //#########################################################################

    //#########################################################################
    // Step methods
    // 
//# 300 "/tmp/tews/ov-dist/ov-chip-2-2010-09-20/test/Data_protocol_description.java"
    //#########################################################################
    // Steps
    // 

    /**
     * Step instance for step set_size in protocol set_size.
     */
    Protocol_step set_size_step;



    /**
     * Initialize {@link #set_size_step}.
     * Initialize the step instance for step set_size in protocol set_size.
     */
    private void init_set_size_step() {
        if(set_size_step != null)
            return;

        APDU_Serializable[] args = new APDU_Serializable[]{
            buf_sizes,
            performance_test
        };

        APDU_Serializable[] res = new APDU_Serializable[]{
            buf_sizes
        };

        set_size_step =
            new Protocol_step(
                (byte)0, // P1
                args, // args



                res // results
            );
        return;
    }


    /**
     * Update step instance in {@link #set_size_step}.
     * Update argument and result references in the step set_size
     * of protocol set_size.
     */
    public void update_set_size_step() {
        assert(set_size_step != null);

        set_size_step.arguments[0] = buf_sizes;
        set_size_step.arguments[1] = performance_test;
        set_size_step.results[0] = buf_sizes;
        return;
    }



    //#########################################################################
    // set_size protocol definition
    // 

    /**
     * Protocol instance for protocol set_size.
     */
    public Protocol set_size_protocol;

    /**
     * Initialize {@link #set_size_protocol}.
     * Initialize the protocol instance for protocol set_size.
     */
    private void init_set_size_protocol() {
        if(set_size_protocol != null)
            return;

        init_set_size_step();

        Protocol_step[] steps = new Protocol_step[]{
            set_size_step
        };
        set_size_protocol = new Protocol(steps);
        return;
    }


    /**
     * Update {@link #set_size_protocol}.
     * Update argument and result references in all 
     * steps of protocol set_size.
     */
    public void update_set_size_protocol() {
        update_set_size_step();
        set_size_protocol.set_result_sizes();
    }


    //#########################################################################
    //#########################################################################
    // 
    // Protocol data_performance_receive
    // 
    //#########################################################################
    //#########################################################################

    //#########################################################################
    // Step methods
    // 

    //#########################################################################
    // Steps
    // 

    /**
     * Step instance for step data_performance_receive in protocol data_performance_receive.
     */
    Protocol_step data_performance_receive_step;



    /**
     * Initialize {@link #data_performance_receive_step}.
     * Initialize the step instance for step data_performance_receive in protocol data_performance_receive.
     */
    private void init_data_performance_receive_step() {
        if(data_performance_receive_step != null)
            return;

        APDU_Serializable[] args = new APDU_Serializable[]{
            buf_0
        };

        APDU_Serializable[] res = null;

        data_performance_receive_step =
            new Protocol_step(
                (byte)0, // P1
                args, // args



                res // results
            );
        return;
    }


    /**
     * Update step instance in {@link #data_performance_receive_step}.
     * Update argument and result references in the step data_performance_receive
     * of protocol data_performance_receive.
     */
    public void update_data_performance_receive_step() {
        assert(data_performance_receive_step != null);

        data_performance_receive_step.arguments[0] = buf_0;
        return;
    }



    //#########################################################################
    // data_performance_receive protocol definition
    // 

    /**
     * Protocol instance for protocol data_performance_receive.
     */
    public Protocol data_performance_receive_protocol;

    /**
     * Initialize {@link #data_performance_receive_protocol}.
     * Initialize the protocol instance for protocol data_performance_receive.
     */
    private void init_data_performance_receive_protocol() {
        if(data_performance_receive_protocol != null)
            return;

        init_data_performance_receive_step();

        Protocol_step[] steps = new Protocol_step[]{
            data_performance_receive_step
        };
        data_performance_receive_protocol = new Protocol(steps);
        return;
    }


    /**
     * Update {@link #data_performance_receive_protocol}.
     * Update argument and result references in all 
     * steps of protocol data_performance_receive.
     */
    public void update_data_performance_receive_protocol() {
        update_data_performance_receive_step();
        data_performance_receive_protocol.set_result_sizes();
    }


    //#########################################################################
    //#########################################################################
    // 
    // Protocol data_performance_send
    // 
    //#########################################################################
    //#########################################################################

    //#########################################################################
    // Step methods
    // 

    //#########################################################################
    // Steps
    // 

    /**
     * Step instance for step data_performance_send in protocol data_performance_send.
     */
    Protocol_step data_performance_send_step;



    /**
     * Initialize {@link #data_performance_send_step}.
     * Initialize the step instance for step data_performance_send in protocol data_performance_send.
     */
    private void init_data_performance_send_step() {
        if(data_performance_send_step != null)
            return;

        APDU_Serializable[] args = null;

        APDU_Serializable[] res = new APDU_Serializable[]{
            buf_5
        };

        data_performance_send_step =
            new Protocol_step(
                (byte)0, // P1
                args, // args



                res // results
            );
        return;
    }


    /**
     * Update step instance in {@link #data_performance_send_step}.
     * Update argument and result references in the step data_performance_send
     * of protocol data_performance_send.
     */
    public void update_data_performance_send_step() {
        assert(data_performance_send_step != null);

        data_performance_send_step.results[0] = buf_5;
        return;
    }



    //#########################################################################
    // data_performance_send protocol definition
    // 

    /**
     * Protocol instance for protocol data_performance_send.
     */
    public Protocol data_performance_send_protocol;

    /**
     * Initialize {@link #data_performance_send_protocol}.
     * Initialize the protocol instance for protocol data_performance_send.
     */
    private void init_data_performance_send_protocol() {
        if(data_performance_send_protocol != null)
            return;

        init_data_performance_send_step();

        Protocol_step[] steps = new Protocol_step[]{
            data_performance_send_step
        };
        data_performance_send_protocol = new Protocol(steps);
        return;
    }


    /**
     * Update {@link #data_performance_send_protocol}.
     * Update argument and result references in all 
     * steps of protocol data_performance_send.
     */
    public void update_data_performance_send_protocol() {
        update_data_performance_send_step();
        data_performance_send_protocol.set_result_sizes();
    }


    //#########################################################################
    //#########################################################################
    // 
    // Protocol data_perf_proof
    // 
    //#########################################################################
    //#########################################################################

    //#########################################################################
    // Step methods
    // 

    //#########################################################################
    // Steps
    // 

    /**
     * Step instance for step data_perf_proof_commit in protocol data_perf_proof.
     */
    Protocol_step data_perf_proof_commit_step;

    /**
     * Step instance for step data_perf_answer_to_challenge in protocol data_perf_proof.
     */
    Protocol_step data_perf_answer_to_challenge_step;



    /**
     * Initialize {@link #data_perf_proof_commit_step}.
     * Initialize the step instance for step data_perf_proof_commit in protocol data_perf_proof.
     */
    private void init_data_perf_proof_commit_step() {
        if(data_perf_proof_commit_step != null)
            return;

        APDU_Serializable[] args = new APDU_Serializable[]{
            buf_0
        };

        APDU_Serializable[] res = new APDU_Serializable[]{
            buf_1,
            buf_2,
            buf_3
        };

        data_perf_proof_commit_step =
            new Protocol_step(
                (byte)0, // P1
                args, // args



                res // results
            );
        return;
    }


    /**
     * Update step instance in {@link #data_perf_proof_commit_step}.
     * Update argument and result references in the step data_perf_proof_commit
     * of protocol data_perf_proof.
     */
    public void update_data_perf_proof_commit_step() {
        assert(data_perf_proof_commit_step != null);

        data_perf_proof_commit_step.arguments[0] = buf_0;
        data_perf_proof_commit_step.results[0] = buf_1;
        data_perf_proof_commit_step.results[1] = buf_2;
        data_perf_proof_commit_step.results[2] = buf_3;
        return;
    }


    /**
     * Initialize {@link #data_perf_answer_to_challenge_step}.
     * Initialize the step instance for step data_perf_answer_to_challenge in protocol data_perf_proof.
     */
    private void init_data_perf_answer_to_challenge_step() {
        if(data_perf_answer_to_challenge_step != null)
            return;

        APDU_Serializable[] args = new APDU_Serializable[]{
            buf_4
        };

        APDU_Serializable[] res = new APDU_Serializable[]{
            buf_5,
            buf_6,
            buf_7,
            buf_8,
            buf_9
        };

        data_perf_answer_to_challenge_step =
            new Protocol_step(
                (byte)1, // P1
                args, // args



                res // results
            );
        return;
    }


    /**
     * Update step instance in {@link #data_perf_answer_to_challenge_step}.
     * Update argument and result references in the step data_perf_answer_to_challenge
     * of protocol data_perf_proof.
     */
    public void update_data_perf_answer_to_challenge_step() {
        assert(data_perf_answer_to_challenge_step != null);

        data_perf_answer_to_challenge_step.arguments[0] = buf_4;
        data_perf_answer_to_challenge_step.results[0] = buf_5;
        data_perf_answer_to_challenge_step.results[1] = buf_6;
        data_perf_answer_to_challenge_step.results[2] = buf_7;
        data_perf_answer_to_challenge_step.results[3] = buf_8;
        data_perf_answer_to_challenge_step.results[4] = buf_9;
        return;
    }



    //#########################################################################
    // data_perf_proof protocol definition
    // 

    /**
     * Protocol instance for protocol data_perf_proof.
     */
    public Protocol data_perf_proof_protocol;

    /**
     * Initialize {@link #data_perf_proof_protocol}.
     * Initialize the protocol instance for protocol data_perf_proof.
     */
    private void init_data_perf_proof_protocol() {
        if(data_perf_proof_protocol != null)
            return;

        init_data_perf_proof_commit_step();
        init_data_perf_answer_to_challenge_step();

        Protocol_step[] steps = new Protocol_step[]{
            data_perf_proof_commit_step,
            data_perf_answer_to_challenge_step
        };
        data_perf_proof_protocol = new Protocol(steps);
        return;
    }


    /**
     * Update {@link #data_perf_proof_protocol}.
     * Update argument and result references in all 
     * steps of protocol data_perf_proof.
     */
    public void update_data_perf_proof_protocol() {
        update_data_perf_proof_commit_step();
        update_data_perf_answer_to_challenge_step();
        data_perf_proof_protocol.set_result_sizes();
    }


    /**
     * Update all protocols in this object.
     * Update all argument and result references in all
     * steps of all protocol instances described in Data_protocol.id.
     */
    public void update_all() {
        update_check_data_protocol();
        update_set_size_protocol();
        update_data_performance_receive_protocol();
        update_data_performance_send_protocol();
        update_data_perf_proof_protocol();
    }


    //#########################################################################
    //#########################################################################
    // 
    // constructor: initialize protocols
    // 
    //#########################################################################
    //#########################################################################

    /**
     * Construct protocol descriptions.
     * Construct and initialize the protocol descriptions
     * for all protocols described in Data_protocol.id,
     * except for those that are declared as delayed there.
     */
    public Data_protocol_description(Test_protocols test_protocols) {
        // initialize variables
        buf_0 = new Resizable_buffer(check_data_max_size, false);
        buf_1 = new Resizable_buffer(check_data_max_size, false);
        buf_2 = new Resizable_buffer(check_data_max_size, false);
        buf_3 = new Resizable_buffer(check_data_max_size, false);
        buf_4 = new Resizable_buffer(check_data_max_size, false);
        buf_5 = new Resizable_buffer(check_data_max_size, false);
        buf_6 = new Resizable_buffer(check_data_max_size, false);
        buf_7 = new Resizable_buffer(check_data_max_size, false);
        buf_8 = new Resizable_buffer(check_data_max_size, false);
        buf_9 = new Resizable_buffer(check_data_max_size, false);
        buf_sizes = new APDU_short_array((short)10);
        performance_test = new APDU_boolean();




        // constructor statements
        this.test_protocols = test_protocols;

        // initialize protocols
        init_check_data_protocol();
        init_set_size_protocol();
        init_data_performance_receive_protocol();
        init_data_performance_send_protocol();
        init_data_perf_proof_protocol();
        return;
    }
}
